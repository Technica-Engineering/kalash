stages:
  - test
  - deploy

# restrict pipeline to run only on develop and master merge requests:
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH == "master"

variables:
  PIP_CONFIG_FILE: "C:/ProgramData/pip/pip.ini"

# prepare conda env:
before_script:
  - conda init powershell
  - "if (test-path $PROFILE.CurrentUserAllHosts) { & $PROFILE.CurrentUserAllHosts}"
  - conda create --name kalash_ci_build --yes python=3.7.6 pip
  - conda activate kalash_ci_build; pip install nox keyring twine
  - conda activate kalash_ci_build; pip install -e .[dev]

# run tests triggering the explicit file:
test:
  stage: test
  script:
    - conda init powershell
    - "if (test-path $PROFILE.CurrentUserAllHosts) { & $PROFILE.CurrentUserAllHosts}"
    - conda activate kalash_ci_build; nox -e test
    - conda activate kalash_ci_build; nox -e cov_report
  artifacts:
    paths:
      - './'
    expire_in: 1 week

# build wheel and upload build with twine:
build:
  stage: deploy
  script:
    - conda init powershell
    - "if (test-path $PROFILE.CurrentUserAllHosts) { & $PROFILE.CurrentUserAllHosts}"
    - conda activate kalash_ci_build; nox -e whl
    - conda activate kalash_ci_build; nox -e send
  only:
    refs:
      - master

# clean up:
after_script:
  - conda init powershell
  - "if (test-path $PROFILE.CurrentUserAllHosts) { & $PROFILE.CurrentUserAllHosts}"
  - conda remove --name kalash_ci_build --all --yes